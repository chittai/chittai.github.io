<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>FUDA RYOHEI</title>
    <link>https://chittai.github.io/</link>
    <description>Recent content on FUDA RYOHEI</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>ja</language>
    <lastBuildDate>Sun, 05 May 2019 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="https://chittai.github.io/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Creating a New Theme</title>
      <link>https://chittai.github.io/posts/creating-a-new-theme/</link>
      <pubDate>Sun, 28 Sep 2014 00:00:00 +0000</pubDate>
      
      <guid>https://chittai.github.io/posts/creating-a-new-theme/</guid>
      <description>Introduction This tutorial will show you how to create a simple theme in Hugo. I assume that you are familiar with HTML, the bash command line, and that you are comfortable using Markdown to format content. I&amp;rsquo;ll explain how Hugo uses templates and how you can organize your templates to create a theme. I won&amp;rsquo;t cover using CSS to style your theme.
We&amp;rsquo;ll start with creating a new site with a very basic template.</description>
    </item>
    
    <item>
      <title>Migrate to Hugo from Jekyll</title>
      <link>https://chittai.github.io/posts/migrate-from-jekyll/</link>
      <pubDate>Mon, 10 Mar 2014 00:00:00 +0000</pubDate>
      
      <guid>https://chittai.github.io/posts/migrate-from-jekyll/</guid>
      <description>Move static content to static Jekyll has a rule that any directory not starting with _ will be copied as-is to the _site output. Hugo keeps all static content under static. You should therefore move it all there. With Jekyll, something that looked like
▾ &amp;lt;root&amp;gt;/ ▾ images/ logo.png  should become
▾ &amp;lt;root&amp;gt;/ ▾ static/ ▾ images/ logo.png  Additionally, you&amp;rsquo;ll want any files that should reside at the root (such as CNAME) to be moved to static.</description>
    </item>
    
    <item>
      <title>About FUDA RYOHEI</title>
      <link>https://chittai.github.io/about/</link>
      <pubDate>Sun, 05 May 2019 00:00:00 +0000</pubDate>
      
      <guid>https://chittai.github.io/about/</guid>
      <description>Biography  布田　遼平(ふだ　りょうへい) 1988.12.21 Infrastructure Engineer  野村総合研究所に所属。インフラエンジニアとして社内クラウド基盤を管理。大学ではマルチキャストの研究に従事。 現在VRに興味があり、OculusRift/Goを使用したコンテンツの開発を独自でしている。
SkilSet  Hypervisor     Hypervisor Knowldge Level     VMware ESXi ★★★★★   OracleVM ★★★★     Storage     Vender Knowldge Level     NetApp(ONTAP) ★★★★★   EMC ★★★     Network     Vender Knowldge Level     Cisco ★★★     Programming Language     ProgrammingLanguage Knowldge Level     C# ★★★   Go ★   Ruby ★★★     Framework     Framework Knowldge Level     Ruby on Rails ★★★   jQuery ★★★     Game Engine     GameEngine Knowldge Level     Unity ★★★     Cloud Platform     Platform Knowldge Level     GCP ★★   AWS ★   OCI ★★★     XR Platform     Platform Knowldge Level     Oculus Rift/Go ★★★     Version Control     Platform Knowldge Level     Git ★★★★   SVN ★★     Infrastructure Tool     Tool Knowldge Level     Ansible ★★   Terraform ★★   Jenkins ★★     RDBMS(DBA)     Tool Knowldge Level     Oracle ★★★★    Education  東京理科大学理工学研究科 情報科学専攻 March,2012  Certified  Oracle Master Silver  Resume 野村総合研究所　  2012/04 ~ 現在</description>
    </item>
    
    <item>
      <title>VR美術館</title>
      <link>https://chittai.github.io/portfolio/vr_museum/</link>
      <pubDate>Fri, 04 May 2018 00:00:00 +0000</pubDate>
      
      <guid>https://chittai.github.io/portfolio/vr_museum/</guid>
      <description>Unicessingで作成した作品を、美術館のアセット上に配置してます。近くによると音楽が聞こえてくるので、 その作品にあった音楽的な演出が可能です。(手前の作品は、近づくと海っぽい音楽が流れてきます。)
blog記事
Unity  / Unicessing</description>
    </item>
    
    <item>
      <title>hyde-hyde</title>
      <link>https://chittai.github.io/portfolio/hyde-hyde/</link>
      <pubDate>Sat, 27 Jan 2018 00:00:00 +0000</pubDate>
      
      <guid>https://chittai.github.io/portfolio/hyde-hyde/</guid>
      <description>Hyde-hyde is a responsive Hugo theme inspired by @spf13&amp;rsquo;s Hyde and its variant Nate Finch&amp;rsquo;s blog. It was heavily restructured with modularised page layouts for easier maintenance and modification. Hyde-hyde offers awesome features such as nice colour tone, code highlighting, Font-Awesome 5&amp;rsquo;s sidebar icons), a cool portfolio page, more choices for commenting (e.g. GraphComment, Disqus).</description>
    </item>
    
    <item>
      <title>Draw a Cat</title>
      <link>https://chittai.github.io/portfolio/drawcat/</link>
      <pubDate>Mon, 07 Aug 2017 00:00:00 +0000</pubDate>
      
      <guid>https://chittai.github.io/portfolio/drawcat/</guid>
      <description>猫の似顔絵を書いて、JUDGEボタンを押すとその絵に点数が付きます。この点数はCloudVisioAPIで書いた絵を判定し、その中で”Cat”の画像認識のスコアを取り出しています。 その点数を登録することでランキングに点数を登録することができますし、書いた絵を保存→呼び出しといったこともできるようにしています。 今はAPIキーの有効期限が切れてて使用できません。。
github / blog記事
javascript  / jQuery  / Ruby  / Ruby on Rails  / CSS  / HTML  /</description>
    </item>
    
    <item>
      <title>(Hu)go Template Primer</title>
      <link>https://chittai.github.io/posts/goisforlovers/</link>
      <pubDate>Wed, 02 Apr 2014 00:00:00 +0000</pubDate>
      
      <guid>https://chittai.github.io/posts/goisforlovers/</guid>
      <description>Hugo uses the excellent go html/template library for its template engine. It is an extremely lightweight engine that provides a very small amount of logic. In our experience that it is just the right amount of logic to be able to create a good static website. If you have used other template systems from different languages or frameworks you will find a lot of similarities in go templates.
This document is a brief primer on using go templates.</description>
    </item>
    
    <item>
      <title>Getting Started with Hugo</title>
      <link>https://chittai.github.io/posts/hugoisforlovers/</link>
      <pubDate>Wed, 02 Apr 2014 00:00:00 +0000</pubDate>
      
      <guid>https://chittai.github.io/posts/hugoisforlovers/</guid>
      <description>Step 1. Install Hugo Goto hugo releases and download the appropriate version for your os and architecture.
Save it somewhere specific as we will be using it in the next step.
More complete instructions are available at installing hugo
Step 2. Build the Docs Hugo has its own example site which happens to also be the documentation site you are reading right now.
Follow the following steps:
 Clone the hugo repository Go into the repo Run hugo in server mode and build the docs Open your browser to http://localhost:1313  Corresponding pseudo commands:</description>
    </item>
    
    <item>
      <title>facility_searcher</title>
      <link>https://chittai.github.io/portfolio/facilitysearcher/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://chittai.github.io/portfolio/facilitysearcher/</guid>
      <description>住所の検索に合わせて近くにあって欲しい施設を3つ選択(&amp;quot;病院&amp;quot;、&amp;quot;コンビニ&amp;quot;など種類で選択)します。 検索した住所から選択した施設までの距離をもとに点数を計算します(選択した施設が近くにあるほど高得点)。 ユースケースとしては、引越し先の周辺の施設を調べたい時に住所と一緒に施設までの距離も検索して、 引越し先住所を評価する時に使用したりするといいと思います。 今はAPIキーの有効期限が切れてて使用できません。。
github / blog記事
Ruby  / Ruby on Rails  / CSS  / HTML  /</description>
    </item>
    
  </channel>
</rss>